import numpy as np

def dft_from_definition(x, duration, example_signal=False):
    """
    Perform Discrete Fourier Transform (DFT) of a signal based on its definition.

    Args:
    - x (list or np.array): Input signal in the time domain.
    - duration (float): Duration of the signal.

    Returns:
    - freq_domain (np.array): Signal in the frequency domain (complex values).
    - freq_axis (np.array): Frequency axis for plotting.
    """
    if example_signal:

        # x = [
        # [0, 0],
        # [0, 1.74831568647798],
        # [0, 3.38589080774217],
        # [0, 4.8128711636485],
        # [0, 5.94974746830583],
        # [0, 6.7441668186291],
        # [0, 7.17426350876555],
        # [0, 7.2481803951877],
        # [0, 7],
        # [0, 6.48281353045752],
        # [0, 5.76004994639246],
        # [0, 4.89640775360653],
        # [0, 3.94974746830583],
        # [0, 2.96511209862592],
        # [0, 1.97167724536908],
        # [0, 0.98294882174781],
        # [0, 6.12323399573676E-16],
        # [0, -0.982948821747808],
        # [0, -1.97167724536908],
        # [0, -2.96511209862592],
        # [0, -3.94974746830583],
        # [0, -4.89640775360653],
        # [0, -5.76004994639245],
        # [0, -6.48281353045752],
        # [0, -7],
        # [0, -7.2481803951877],
        # [0, -7.17426350876555],
        # [0, -6.7441668186291],
        # [0, -5.94974746830583],
        # [0, -4.8128711636485],
        # [0, -3.38589080774218],
        # [0, -1.74831568647799],
        # [0, -2.20436423846523E-15],
        # [0, 1.74831568647798],
        # [0, 3.38589080774217],
        # [0, 4.81287116364849],
        # [0, 5.94974746830583],
        # [0, 6.7441668186291],
        # [0, 7.17426350876555],
        # [0, 7.2481803951877],
        # [0, 7],
        # [0, 6.48281353045752],
        # [0, 5.76004994639246],
        # [0, 4.89640775360653],
        # [0, 3.94974746830583],
        # [0, 2.96511209862592],
        # [0, 1.97167724536908],
        # [0, 0.982948821747806],
        # [0, 1.83697019872102E-15],
        # [0, -0.982948821747803],
        # [0, -1.97167724536908],
        # [0, -2.96511209862592],
        # [0, -3.94974746830583],
        # [0, -4.89640775360652],
        # [0, -5.76004994639245],
        # [0, -6.48281353045752],
        # [0, -6.99999999999999],
        # [0, -7.2481803951877],
        # [0, -7.17426350876555],
        # [0, -6.7441668186291],
        # [0, -5.94974746830583],
        # [0, -4.8128711636485],
        # [0, -3.38589080774218],
        # [0, -1.74831568647798],
        # [0, -4.40872847693047E-15],
        # [0, 1.74831568647797],
        # [0, 3.38589080774217],
        # [0, 4.81287116364849],
        # [0, 5.94974746830583],
        # [0, 6.7441668186291],
        # [0, 7.17426350876555],
        # [0, 7.2481803951877],
        # [0, 7],
        # [0, 6.48281353045752],
        # [0, 5.76004994639246],
        # [0, 4.89640775360653],
        # [0, 3.94974746830584],
        # [0, 2.96511209862593],
        # [0, 1.97167724536908],
        # [0, 0.982948821747807],
        # ]
        x = [
        [0, 7.0],
        [0, 5.497104466739199],
        [0, 1.8477590650225741],
        [0, -1.8725946813276466],
        [0, -3.585786437626905],
        [0, -2.4243934398935343],
        [0, 0.7653668647301786],
        [0, 3.925714549964994],
        [0, 5.0],
        [0, 3.145353261900485],
        [0, -0.7653668647301775],
        [0, -4.646674371971937],
        [0, -6.414213562373095],
        [0, -5.198473130537827],
        [0, -1.8477590650225755],
        [0, 1.5739633451262722],
        [0, 3.0],
        [0, 1.573963345126276],
        [0, -1.8477590650225701],
        [0, -5.198473130537829],
        [0, -6.414213562373096],
        [0, -4.646674371971935],
        [0, -0.7653668647301844],
        [0, 3.1453532619004685],
        [0, 4.999999999999999],
        [0, 3.9257145499650004],
        [0, 0.7653668647301665],
        [0, -2.4243934398935343],
        [0, -3.585786437626905],
        [0, -1.872594681327641],
        [0, 1.8477590650225681],
        [0, 5.497104466739185],
        [0, 7.0],
        [0, 5.497104466739205],
        [0, 1.8477590650225613],
        [0, -1.8725946813276457],
        [0, -3.5857864376269033],
        [0, -2.424393439893528],
        [0, 0.7653668647301749],
        [0, 3.92571454996498],
        [0, 5.000000000000001],
        [0, 3.145353261900491],
        [0, -0.7653668647301907],
        [0, -4.6466743719719386],
        [0, -6.414213562373093],
        [0, -5.198473130537824],
        [0, -1.8477590650225801],
        [0, 1.5739633451262869],
        [0, 3.0],
        [0, 1.5739633451262849],
        [0, -1.8477590650225832],
        [0, -5.198473130537826],
        [0, -6.414213562373094],
        [0, -4.6466743719719386],
        [0, -0.7653668647301898],
        [0, 3.1453532619004916],
        [0, 4.999999999999999],
        [0, 3.9257145499650017],
        [0, 0.7653668647301709],
        [0, -2.4243934398935307],
        [0, -3.585786437626907],
        [0, -1.872594681327645],
        [0, 1.847759065022563],
        [0, 5.4971044667392075],
        [0, 7.0],
        [0, 5.497104466739209],
        [0, 1.8477590650225664],
        [0, -1.872594681327642],
        [0, -3.585786437626905],
        [0, -2.4243934398935307],
        [0, 0.7653668647301705],
        [0, 3.9257145499650012],
        [0, 5.000000000000001],
        [0, 3.1453532619004947],
        [0, -0.7653668647301886],
        [0, -4.6466743719719386],
        [0, -6.414213562373096],
        [0, -5.198473130537827],
        [0, -1.8477590650225848],
        [0, 1.5739633451262842],
        [0, 3.0],
        [0, 1.5739633451263129],
        [0, -1.8477590650225102],
        [0, -5.198473130537819],
        [0, -6.414213562373092],
        [0, -4.646674371971965],
        [0, -0.7653668647302274],
        [0, 3.1453532619004365],
        [0, 4.999999999999998],
        [0, 3.9257145499650044],
        [0, 0.7653668647302075],
        [0, -2.424393439893506],
        [0, -3.5857864376269095],
        [0, -1.872594681327703],
        [0, 1.8477590650225606],
        [0, 5.497104466739179],
        [0, 7.0],
        [0, 5.497104466739238],
        [0, 1.8477590650226423],
        [0, -1.8725946813276382],
        [0, -3.5857864376269024],
        [0, -2.424393439893556],
        [0, 0.7653668647301338],
        [0, 3.9257145499649555],
        [0, 4.999999999999995],
        [0, 3.145353261900492],
        [0, -0.7653668647301477],
        [0, -4.646674371971909],
        [0, -6.414213562373095],
        [0, -5.198473130537881],
        [0, -1.8477590650225897],
        [0, 1.5739633451262562],
        [0, 3.0],
        [0, 1.5739633451263164],
        [0, -1.8477590650225055],
        [0, -5.198473130537816],
        [0, -6.414213562373092],
        [0, -4.646674371971969],
        [0, -0.7653668647302327],
        [0, 3.145353261900433],
        [0, 4.999999999999998],
        [0, 3.925714549965007],
        [0, 0.765366864730212],
        [0, -2.4243934398935023],
        [0, -3.5857864376269104],
        [0, -1.8725946813277068],
        [0, 1.8477590650225555],
        [0, 5.4971044667391755],
        [0, 7.0],
        [0, 5.497104466739241],
        [0, 1.8477590650226474],
        [0, -1.8725946813276344],
        [0, -3.5857864376269024],
        [0, -2.424393439893559],
        [0, 0.7653668647301293],
        [0, 3.925714549964953],
        [0, 4.999999999999995],
        [0, 3.1453532619004956],
        [0, -0.7653668647301424],
        [0, -4.646674371971906],
        [0, -6.414213562373095],
        [0, -5.198473130537883],
        [0, -1.8477590650225943],
        [0, 1.5739633451262525],
        [0, 3.0],
        [0, 1.5739633451263193],
        [0, -1.8477590650225009],
        [0, -5.1984731305378125],
        [0, -6.414213562373093],
        [0, -4.646674371971972],
        [0, -0.7653668647302382],
        [0, 3.145353261900429],
        [0, 4.999999999999997],
        [0, 3.92571454996501],
        [0, 0.7653668647302164],
        [0, -2.4243934398934996],
        [0, -3.5857864376269104],
        [0, -1.8725946813277101],
        [0, 1.8477590650225506],
        [0, 5.497104466739172],
        [0, 7.0],
        [0, 5.497104466739245],
        [0, 1.8477590650226525],
        [0, -1.8725946813275807],
        [0, -3.5857864376269015],
        [0, -2.4243934398936124],
        [0, 0.7653668647301828],
        [0, 3.925714549964986],
        [0, 4.999999999999996],
        [0, 3.1453532619005],
        [0, -0.765366864730137],
        [0, -4.646674371971901],
        [0, -6.414213562373094],
        [0, -5.198473130537886],
        [0, -1.84775906502267],
        [0, 1.5739633451261992],
        [0, 3.0],
        [0, 1.5739633451262756],
        [0, -1.8477590650225617],
        [0, -5.19847313053781],
        [0, -6.414213562373093],
        [0, -4.646674371971976],
        [0, -0.7653668647302435],
        [0, 3.1453532619004245],
        [0, 4.999999999999997],
        [0, 3.9257145499650634],
        [0, 0.7653668647302919],
        [0, -2.4243934398935343],
        [0, -3.5857864376269006],
        [0, -1.872594681327656],
        [0, 1.8477590650225455],
        [0, 5.497104466739168],
        [0, 7.0],
        [0, 5.497104466739248],
        [0, 1.8477590650226576],
        [0, -1.8725946813275764],
        [0, -3.5857864376269015],
        [0, -2.424393439893615],
        [0, 0.7653668647301783],
        [0, 3.925714549964983],
        [0, 4.9999999999999964],
        [0, 3.1453532619005036],
        [0, -0.7653668647301317],
        [0, -4.646674371971898],
        [0, -6.414213562373094],
        [0, -5.19847313053789],
        [0, -1.8477590650226747],
        [0, 1.5739633451261954],
        [0, 3.0],
        [0, 1.573963345126279],
        [0, -1.847759065022557],
        [0, -5.198473130537806],
        [0, -6.414213562373094],
        [0, -4.646674371971981],
        [0, -0.7653668647302488],
        [0, 3.145353261900421],
        [0, 4.9999999999999964],
        [0, 3.9257145499650665],
        [0, 0.7653668647302964],
        [0, -2.4243934398935316],
        [0, -3.585786437626901],
        [0, -1.8725946813276597],
        [0, 1.8477590650225404],
        [0, 5.497104466739165],
        [0, 7.0],
        [0, 5.497104466739252],
        [0, 1.8477590650226627],
        [0, -1.8725946813275731],
        [0, -3.585786437626901],
        [0, -2.424393439893618],
        [0, 0.7653668647301739],
        [0, 3.92571454996498],
        [0, 4.9999999999999964],
        [0, 3.1453532619005076],
        [0, -0.7653668647301264],
        [0, -4.646674371971894],
        [0, -6.414213562373094],
        [0, -5.198473130537893],
        [0, -1.8477590650226794],
        [0, 1.5739633451261918],
        [0, 3.0],
        [0, 1.573963345126282],
        [0, -1.8477590650225524],
        [0, -5.198473130537803],
        [0, -6.414213562373094],
        [0, -4.646674371971985],
        [0, -0.7653668647302542],
        [0, 3.1453532619004174],
        [0, 4.9999999999999964],
        [0, 3.92571454996507],
        [0, 0.7653668647303008],
        [0, -2.424393439893529],
        [0, -3.5857864376269015],
        [0, -1.872594681327663],
        [0, 1.8477590650225353],
        [0, 5.497104466739161],
        ]
        N = len(x)
        sampling_rate = 16
    else:
        N = len(x)
        sampling_rate = N / duration


    # Calculate the frequency axis - d - gap between probes, this is X(m) in equation
    freq_axis = np.fft.fftfreq(N, d=1/sampling_rate)

    # Compute the DFT using the formula
    X = np.zeros(N, dtype=complex)  # Initialize an array of complex numbers
    for m in range(N):
        sum_result = 0
        # n - index in time domain
        for n in range(N):
            # Compute the DFT based on the formula: X(m) = sum(x(n) * e^(-j * 2*pi * m * n / N))
            sum_result += x[n][1] * np.exp(-1j * 2 * np.pi * m * n / N)
        X[m] = sum_result / N  # Normalize the DFT result


    return X, freq_axis

def fft_from_definition(x, duration, example_signal):
    """
    Perform Fast Fourier Transform (FFT) using Decimation in Frequency (DIF) approach.

    Args:
    - x (list or np.array): Input signal in the time domain.
    - duration (float): Duration of the signal.

    Returns:
    - freq_domain (np.array): Signal in the frequency domain (complex values).
    - freq_axis (np.array): Frequency axis for plotting.
    """
    if example_signal:

        # x = [
        # [0, 0],
        # [0, 1.74831568647798],
        # [0, 3.38589080774217],
        # [0, 4.8128711636485],
        # [0, 5.94974746830583],
        # [0, 6.7441668186291],
        # [0, 7.17426350876555],
        # [0, 7.2481803951877],
        # [0, 7],
        # [0, 6.48281353045752],
        # [0, 5.76004994639246],
        # [0, 4.89640775360653],
        # [0, 3.94974746830583],
        # [0, 2.96511209862592],
        # [0, 1.97167724536908],
        # [0, 0.98294882174781],
        # [0, 6.12323399573676E-16],
        # [0, -0.982948821747808],
        # [0, -1.97167724536908],
        # [0, -2.96511209862592],
        # [0, -3.94974746830583],
        # [0, -4.89640775360653],
        # [0, -5.76004994639245],
        # [0, -6.48281353045752],
        # [0, -7],
        # [0, -7.2481803951877],
        # [0, -7.17426350876555],
        # [0, -6.7441668186291],
        # [0, -5.94974746830583],
        # [0, -4.8128711636485],
        # [0, -3.38589080774218],
        # [0, -1.74831568647799],
        # [0, -2.20436423846523E-15],
        # [0, 1.74831568647798],
        # [0, 3.38589080774217],
        # [0, 4.81287116364849],
        # [0, 5.94974746830583],
        # [0, 6.7441668186291],
        # [0, 7.17426350876555],
        # [0, 7.2481803951877],
        # [0, 7],
        # [0, 6.48281353045752],
        # [0, 5.76004994639246],
        # [0, 4.89640775360653],
        # [0, 3.94974746830583],
        # [0, 2.96511209862592],
        # [0, 1.97167724536908],
        # [0, 0.982948821747806],
        # [0, 1.83697019872102E-15],
        # [0, -0.982948821747803],
        # [0, -1.97167724536908],
        # [0, -2.96511209862592],
        # [0, -3.94974746830583],
        # [0, -4.89640775360652],
        # [0, -5.76004994639245],
        # [0, -6.48281353045752],
        # [0, -6.99999999999999],
        # [0, -7.2481803951877],
        # [0, -7.17426350876555],
        # [0, -6.7441668186291],
        # [0, -5.94974746830583],
        # [0, -4.8128711636485],
        # [0, -3.38589080774218],
        # [0, -1.74831568647798],
        # [0, -4.40872847693047E-15],
        # [0, 1.74831568647797],
        # [0, 3.38589080774217],
        # [0, 4.81287116364849],
        # [0, 5.94974746830583],
        # [0, 6.7441668186291],
        # [0, 7.17426350876555],
        # [0, 7.2481803951877],
        # [0, 7],
        # [0, 6.48281353045752],
        # [0, 5.76004994639246],
        # [0, 4.89640775360653],
        # [0, 3.94974746830584],
        # [0, 2.96511209862593],
        # [0, 1.97167724536908],
        # [0, 0.982948821747807],
        # ]
        x = [
        [0, 7.0],
        [0, 5.497104466739199],
        [0, 1.8477590650225741],
        [0, -1.8725946813276466],
        [0, -3.585786437626905],
        [0, -2.4243934398935343],
        [0, 0.7653668647301786],
        [0, 3.925714549964994],
        [0, 5.0],
        [0, 3.145353261900485],
        [0, -0.7653668647301775],
        [0, -4.646674371971937],
        [0, -6.414213562373095],
        [0, -5.198473130537827],
        [0, -1.8477590650225755],
        [0, 1.5739633451262722],
        [0, 3.0],
        [0, 1.573963345126276],
        [0, -1.8477590650225701],
        [0, -5.198473130537829],
        [0, -6.414213562373096],
        [0, -4.646674371971935],
        [0, -0.7653668647301844],
        [0, 3.1453532619004685],
        [0, 4.999999999999999],
        [0, 3.9257145499650004],
        [0, 0.7653668647301665],
        [0, -2.4243934398935343],
        [0, -3.585786437626905],
        [0, -1.872594681327641],
        [0, 1.8477590650225681],
        [0, 5.497104466739185],
        [0, 7.0],
        [0, 5.497104466739205],
        [0, 1.8477590650225613],
        [0, -1.8725946813276457],
        [0, -3.5857864376269033],
        [0, -2.424393439893528],
        [0, 0.7653668647301749],
        [0, 3.92571454996498],
        [0, 5.000000000000001],
        [0, 3.145353261900491],
        [0, -0.7653668647301907],
        [0, -4.6466743719719386],
        [0, -6.414213562373093],
        [0, -5.198473130537824],
        [0, -1.8477590650225801],
        [0, 1.5739633451262869],
        [0, 3.0],
        [0, 1.5739633451262849],
        [0, -1.8477590650225832],
        [0, -5.198473130537826],
        [0, -6.414213562373094],
        [0, -4.6466743719719386],
        [0, -0.7653668647301898],
        [0, 3.1453532619004916],
        [0, 4.999999999999999],
        [0, 3.9257145499650017],
        [0, 0.7653668647301709],
        [0, -2.4243934398935307],
        [0, -3.585786437626907],
        [0, -1.872594681327645],
        [0, 1.847759065022563],
        [0, 5.4971044667392075],
        [0, 7.0],
        [0, 5.497104466739209],
        [0, 1.8477590650225664],
        [0, -1.872594681327642],
        [0, -3.585786437626905],
        [0, -2.4243934398935307],
        [0, 0.7653668647301705],
        [0, 3.9257145499650012],
        [0, 5.000000000000001],
        [0, 3.1453532619004947],
        [0, -0.7653668647301886],
        [0, -4.6466743719719386],
        [0, -6.414213562373096],
        [0, -5.198473130537827],
        [0, -1.8477590650225848],
        [0, 1.5739633451262842],
        [0, 3.0],
        [0, 1.5739633451263129],
        [0, -1.8477590650225102],
        [0, -5.198473130537819],
        [0, -6.414213562373092],
        [0, -4.646674371971965],
        [0, -0.7653668647302274],
        [0, 3.1453532619004365],
        [0, 4.999999999999998],
        [0, 3.9257145499650044],
        [0, 0.7653668647302075],
        [0, -2.424393439893506],
        [0, -3.5857864376269095],
        [0, -1.872594681327703],
        [0, 1.8477590650225606],
        [0, 5.497104466739179],
        [0, 7.0],
        [0, 5.497104466739238],
        [0, 1.8477590650226423],
        [0, -1.8725946813276382],
        [0, -3.5857864376269024],
        [0, -2.424393439893556],
        [0, 0.7653668647301338],
        [0, 3.9257145499649555],
        [0, 4.999999999999995],
        [0, 3.145353261900492],
        [0, -0.7653668647301477],
        [0, -4.646674371971909],
        [0, -6.414213562373095],
        [0, -5.198473130537881],
        [0, -1.8477590650225897],
        [0, 1.5739633451262562],
        [0, 3.0],
        [0, 1.5739633451263164],
        [0, -1.8477590650225055],
        [0, -5.198473130537816],
        [0, -6.414213562373092],
        [0, -4.646674371971969],
        [0, -0.7653668647302327],
        [0, 3.145353261900433],
        [0, 4.999999999999998],
        [0, 3.925714549965007],
        [0, 0.765366864730212],
        [0, -2.4243934398935023],
        [0, -3.5857864376269104],
        [0, -1.8725946813277068],
        [0, 1.8477590650225555],
        [0, 5.4971044667391755],
        [0, 7.0],
        [0, 5.497104466739241],
        [0, 1.8477590650226474],
        [0, -1.8725946813276344],
        [0, -3.5857864376269024],
        [0, -2.424393439893559],
        [0, 0.7653668647301293],
        [0, 3.925714549964953],
        [0, 4.999999999999995],
        [0, 3.1453532619004956],
        [0, -0.7653668647301424],
        [0, -4.646674371971906],
        [0, -6.414213562373095],
        [0, -5.198473130537883],
        [0, -1.8477590650225943],
        [0, 1.5739633451262525],
        [0, 3.0],
        [0, 1.5739633451263193],
        [0, -1.8477590650225009],
        [0, -5.1984731305378125],
        [0, -6.414213562373093],
        [0, -4.646674371971972],
        [0, -0.7653668647302382],
        [0, 3.145353261900429],
        [0, 4.999999999999997],
        [0, 3.92571454996501],
        [0, 0.7653668647302164],
        [0, -2.4243934398934996],
        [0, -3.5857864376269104],
        [0, -1.8725946813277101],
        [0, 1.8477590650225506],
        [0, 5.497104466739172],
        [0, 7.0],
        [0, 5.497104466739245],
        [0, 1.8477590650226525],
        [0, -1.8725946813275807],
        [0, -3.5857864376269015],
        [0, -2.4243934398936124],
        [0, 0.7653668647301828],
        [0, 3.925714549964986],
        [0, 4.999999999999996],
        [0, 3.1453532619005],
        [0, -0.765366864730137],
        [0, -4.646674371971901],
        [0, -6.414213562373094],
        [0, -5.198473130537886],
        [0, -1.84775906502267],
        [0, 1.5739633451261992],
        [0, 3.0],
        [0, 1.5739633451262756],
        [0, -1.8477590650225617],
        [0, -5.19847313053781],
        [0, -6.414213562373093],
        [0, -4.646674371971976],
        [0, -0.7653668647302435],
        [0, 3.1453532619004245],
        [0, 4.999999999999997],
        [0, 3.9257145499650634],
        [0, 0.7653668647302919],
        [0, -2.4243934398935343],
        [0, -3.5857864376269006],
        [0, -1.872594681327656],
        [0, 1.8477590650225455],
        [0, 5.497104466739168],
        [0, 7.0],
        [0, 5.497104466739248],
        [0, 1.8477590650226576],
        [0, -1.8725946813275764],
        [0, -3.5857864376269015],
        [0, -2.424393439893615],
        [0, 0.7653668647301783],
        [0, 3.925714549964983],
        [0, 4.9999999999999964],
        [0, 3.1453532619005036],
        [0, -0.7653668647301317],
        [0, -4.646674371971898],
        [0, -6.414213562373094],
        [0, -5.19847313053789],
        [0, -1.8477590650226747],
        [0, 1.5739633451261954],
        [0, 3.0],
        [0, 1.573963345126279],
        [0, -1.847759065022557],
        [0, -5.198473130537806],
        [0, -6.414213562373094],
        [0, -4.646674371971981],
        [0, -0.7653668647302488],
        [0, 3.145353261900421],
        [0, 4.9999999999999964],
        [0, 3.9257145499650665],
        [0, 0.7653668647302964],
        [0, -2.4243934398935316],
        [0, -3.585786437626901],
        [0, -1.8725946813276597],
        [0, 1.8477590650225404],
        [0, 5.497104466739165],
        [0, 7.0],
        [0, 5.497104466739252],
        [0, 1.8477590650226627],
        [0, -1.8725946813275731],
        [0, -3.585786437626901],
        [0, -2.424393439893618],
        [0, 0.7653668647301739],
        [0, 3.92571454996498],
        [0, 4.9999999999999964],
        [0, 3.1453532619005076],
        [0, -0.7653668647301264],
        [0, -4.646674371971894],
        [0, -6.414213562373094],
        [0, -5.198473130537893],
        [0, -1.8477590650226794],
        [0, 1.5739633451261918],
        [0, 3.0],
        [0, 1.573963345126282],
        [0, -1.8477590650225524],
        [0, -5.198473130537803],
        [0, -6.414213562373094],
        [0, -4.646674371971985],
        [0, -0.7653668647302542],
        [0, 3.1453532619004174],
        [0, 4.9999999999999964],
        [0, 3.92571454996507],
        [0, 0.7653668647303008],
        [0, -2.424393439893529],
        [0, -3.5857864376269015],
        [0, -1.872594681327663],
        [0, 1.8477590650225353],
        [0, 5.497104466739161],
        ]
        N = len(x)
        sampling_rate = 16
    else:
        N = len(x)
        sampling_rate = N / duration
    freq_axis = np.fft.fftfreq(N, d=1/sampling_rate)

    # Convert input to numpy array of complex numbers
    x = np.array([val[1] for val in x], dtype=complex)

    # Bit-reversal permutation
    def bit_reverse(value, bits):
        reversed_value = 0
        for i in range(bits):
            if value & (1 << i):
                reversed_value |= 1 << (bits - 1 - i)
        return reversed_value

    bits = int(np.log2(N))
    x = np.array([x[bit_reverse(i, bits)] for i in range(N)])

    # FFT computation with decimation in frequency
    m = 1
    while m < N:
        step = m * 2
        for k in range(0, N, step):
            for j in range(m):
                W = np.exp(-2j * np.pi * j / step)
                u = x[k + j]
                t = x[k + j + m] * W
                x[k + j] = u + t
                x[k + j + m] = u - t
        m = step

    # Normalize the result to match DFT definition (division by N)
    return x / N, freq_axis

def fft_walsh_hadamard_from_definition(x, duration):
    return 0

def fft_walsh_hadamard(x, duration):
    return 0